# .github/workflows/deploy.yml

name: React Deploy to S3 and CloudFront

# main 브랜치에 push 이벤트가 발생했을 때 이 워크플로우를 실행합니다.
on:
  push:
    branches:
      - main

# OIDC 인증을 위한 권한 설정.
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 작업이 실행될 가상 환경

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2. AWS 자격 증명 설정 (OIDC 역할 사용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::289652921928:role/react-service-role # 1단계에서 생성한 IAM 역할의 ARN
          aws-region: ap-northeast-2 # AWS 리전

      # 3. Node.js 환경 설정
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # 프로젝트에 맞는 Node.js 버전
          cache: 'npm'

      # 4. 의존성 설치 및 React 앱 빌드
      - name: Install dependencies
        run: npm ci
      - name: Build React App
        run: npm run build

      # 5. 빌드된 파일을 S3에 업로드(배포)
      - name: Deploy to S3
        run: |
          aws s3 sync ./build s3://dainpass-woosoungcompany-react --delete

      # 6. CloudFront 캐시 무효화
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id E86R7ZTLLOTXW --paths "/*"